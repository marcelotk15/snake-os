/******************************************************************************
 *
 *  Copyright (c) 2008 Cavium Networks 
 * 
 *  This file is free software; you can redistribute it and/or modify 
 *  it under the terms of the GNU General Public License, Version 2, as 
 *  published by the Free Software Foundation. 
 *
 *  This file is distributed in the hope that it will be useful, 
 *  but AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of 
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or 
 *  NONINFRINGEMENT.  See the GNU General Public License for more details. 
 *
 *  You should have received a copy of the GNU General Public License 
 *  along with this file; if not, write to the Free Software 
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA or 
 *  visit http://www.gnu.org/licenses/. 
 *
 *  This file may also be available under a different license from Cavium. 
 *  Contact Cavium Networks for more information
 *
 ******************************************************************************/



#ifndef __GDMAC_H__
#define __GDMAC_H__

#include <linux/types.h>

#define GDMAC_PHYS_MEM_BASE		0x60000000
//#define GDMAC_VIRT_MEM_BASE		(((0x60000000 >> 4) & 0xffff0000) + (0x60000000 & 0xffff) + 0xf0000000)
#define GDMAC_VIRT_MEM_BASE		SYSVA_DMAC_BASE_ADDR
#define GDMAC_PHYS_MEM_SIZE		0x10000000

#define GDMAC_REG_ADDR(reg)		(GDMAC_VIRT_MEM_BASE | (reg))
#define GDMAC_REG(reg)			(*(u32 volatile *)GDMAC_REG_ADDR(reg))

#define GDMAC_CH0			0
#define GDMAC_CH1			1
#define GDMAC_CH2			2
#define GDMAC_CH3			3

#define GDMAC_INT_STATUS		GDMAC_REG(0x00000000)
#define GDMAC_TC_INT_STATUS		GDMAC_REG(0x00000004)
#define GDMAC_TC_INT_STATUS_CLR		GDMAC_REG(0x00000008)
#define GDMAC_ERR_INT_STATUS		GDMAC_REG(0x0000000C)
#define GDMAC_ERR_INT_STATUS_CLR	GDMAC_REG(0x00000010)
#define GDMAC_TC_STATUS			GDMAC_REG(0x00000014)
#define GDMAC_ERR_STATUS		GDMAC_REG(0x00000018)
#define GDMAC_CH_ENABLE_STATUS		GDMAC_REG(0x0000001C)
#define GDMAC_CH_BUSY_STATUS		GDMAC_REG(0x00000020)
#define GDMAC_CSR			GDMAC_REG(0x00000024)
#define GDMAC_SYNC			GDMAC_REG(0x00000028)

#define GDMAC_CH0_CSR			GDMAC_REG(0x00000100)
#define GDMAC_CH0_CFG			GDMAC_REG(0x00000104)
#define GDMAC_CH0_SRC_ADDR		GDMAC_REG(0x00000108)
#define GDMAC_CH0_DST_ADDR		GDMAC_REG(0x0000010C)
#define GDMAC_CH0_XFR_SIZE		GDMAC_REG(0x00000114)

#define GDMAC_CH1_CSR			GDMAC_REG(0x00000120)
#define GDMAC_CH1_CFG			GDMAC_REG(0x00000124)
#define GDMAC_CH1_SRC_ADDR		GDMAC_REG(0x00000128)
#define GDMAC_CH1_DST_ADDR		GDMAC_REG(0x0000012C)
#define GDMAC_CH1_XFR_SIZE		GDMAC_REG(0x00000134)

#define GDMAC_CH2_CSR			GDMAC_REG(0x00000140)
#define GDMAC_CH2_CFG			GDMAC_REG(0x00000144)
#define GDMAC_CH2_SRC_ADDR		GDMAC_REG(0x00000148)
#define GDMAC_CH2_DST_ADDR		GDMAC_REG(0x0000014C)
#define GDMAC_CH2_XFR_SIZE		GDMAC_REG(0x00000154)

#define GDMAC_CH3_CSR			GDMAC_REG(0x00000160)
#define GDMAC_CH3_CFG			GDMAC_REG(0x00000164)
#define GDMAC_CH3_SRC_ADDR		GDMAC_REG(0x00000168)
#define GDMAC_CH3_DST_ADDR		GDMAC_REG(0x0000016C)
#define GDMAC_CH3_XFR_SIZE		GDMAC_REG(0x00000174)

#define GDMAC_CH0_PENDING_INT_BIT		0
#define GDMAC_CH1_PENDING_INT_BIT		1
#define GDMAC_CH2_PENDING_INT_BIT		2
#define GDMAC_CH3_PENDING_INI_BIT		3

#define GDMAC_CH0_PENDING_TC_INT_BIT		0
#define GDMAC_CH1_PENDING_TC_INT_BIT		1
#define GDMAC_CH2_PENDING_TC_INT_BIT		2
#define GDMAC_CH3_PENDING_TC_INT_BIT		3

#define GDMAC_CH0_CLEAR_TC_INT_BIT		0
#define GDMAC_CH1_CLEAR_TC_INT_BIT		1
#define GDMAC_CH2_CLEAR_TC_INT_BIT		2
#define GDMAC_CH3_CLEAR_TC_INT_BIT		3

#define GDMAC_CH0_PENDING_ERR_INT_BIT		0
#define GDMAC_CH1_PENDING_ERR_INT_BIT		1
#define GDMAC_CH2_PENDING_ERR_INT_BIT		2
#define GDMAC_CH3_PENDING_ERR_INT_BIT		3

#define GDMAC_CH0_CLEAR_ERR_INT_BIT		0
#define GDMAC_CH1_CLEAR_ERR_INT_BIT		1
#define GDMAC_CH2_CLEAR_ERR_INT_BIT		2
#define GDMAC_CH3_CLEAR_ERR_INT_BIT		3

#define GDMAC_CH0_TC_STATUS_BIT			0
#define GDMAC_CH1_TC_STATUS_BIT			1
#define GDMAC_CH2_TC_STATUS_BIT			2
#define GDMAC_CH3_TC_STATUS_BIT			3

#define GDMAC_CH0_ERR_STATUS_BIT		0
#define GDMAC_CH1_ERR_STATUS_BIT		1
#define GDMAC_CH2_ERR_STATUS_BIT		2
#define GDMAC_CH3_ERR_STATUS_BIT		3

#define GDMAC_CH0_ENABLE_STATUS_BIT		0
#define GDMAC_CH1_ENABLE_STATUS_BIT		1
#define GDMAC_CH2_ENABLE_STATUS_BIT		2
#define GDMAC_CH3_ENABLE_STATUS_BIT		3

#define GDMAC_CH0_BUSY_STATUS_BIT		0
#define GDMAC_CH1_BUSY_STATUS_BIT		1
#define GDMAC_CH2_BUSY_STATUS_BIT		2
#define GDMAC_CH3_BUSY_STATUS_BIT		3

#define GDMAC_ENABLE_BIT			0
#define GDMAC_MASTER0_ENDIAN_BIT		1
#define GDMAC_MASTER1_ENDIAN_BIT		2

#define GDMAC_CH0_SYNC_ENABLE_BIT		0
#define GDMAC_CH1_SYNC_ENABLE_BIT		1
#define GDMAC_CH2_SYNC_ENABLE_BIT		2
#define GDMAC_CH3_SYNC_ENABLE_BIT		3

#define GDMAC_CH_TC_INT_MASK_BIT		0
#define GDMAC_CH_ERR_INT_MASK_BIT		1
#define GDMAC_CH_ABT_INT_MASK_BIT		2
#define GDMAC_CH_BUSY_BIT			8

#define GDMAC_CH_ENABLE_BIT			0
#define GDMAC_CH_DST_SEL_BIT			1
#define GDMAC_CH_SRC_SEL_BIT			2
#define GDMAC_CH_DST_ADDR_CTL_BIT		3
#define GDMAC_CH_SRC_ADDR_CTL_BIT		5
#define GDMAC_CH_MODE_BIT			7
#define GDMAC_CH_DST_WIDTH_BIT			8
#define GDMAC_CH_SRC_WIDTH_BIT			11
#define GDMAC_CH_ABT_BIT			15
#define GDMAC_CH_SRC_BURST_SIZE_BIT		16
#define GDMAC_CH_PROTECT_MODE_BIT		19
#define GDMAC_CH_BUFFERABLE_BIT			20
#define GDMAC_CH_CACHEABLE_BIT			21
#define GDMAC_CH_PRIORITY_BIT			22

#define GDMAC_CH_DST_ADDR_CTL_MASK		0x3
#define GDMAC_CH_DST_ADDR_CTL_INC		0x0
#define GDMAC_CH_DST_ADDR_CTL_DEC		0x1
#define GDMAC_CH_DST_ADDR_CTL_FIXED		0x2

#define GDMAC_CH_SRC_ADDR_CTL_MASK		0x3
#define GDMAC_CH_SRC_ADDR_CTL_INC		0x0
#define GDMAC_CH_SRC_ADDR_CTL_DEC		0x1
#define GDMAC_CH_SRC_ADDR_CTL_FIXED		0x2

#define GDMAC_CH_MODE_NORMAL			0x0
#define GDMAC_CH_MODE_HANDSHAKE			0x1

#define GDMAC_CH_DST_WIDTH_MASK			0x3
#define GDMAC_CH_DST_WIDTH_8BITS		0x0
#define GDMAC_CH_DST_WIDTH_16BITS		0x1
#define GDMAC_CH_DST_WIDTH_32BITS		0x2

#define GDMAC_CH_SRC_WIDTH_MASK			0x3
#define GDMAC_CH_SRC_WIDTH_8BITS		0x0
#define GDMAC_CH_SRC_WIDTH_16BITS		0x1
#define GDMAC_CH_SRC_WIDTH_32BITS		0x2

#define GDMAC_CH_SRC_BURST_SIZE_MASK		0x8
#define GDMAC_CH_SRC_BURST_SIZE_1		0x0
#define GDMAC_CH_SRC_BURST_SIZE_4		0x1
#define GDMAC_CH_SRC_BURST_SIZE_8		0x2
#define GDMAC_CH_SRC_BURST_SIZE_16		0x3
#define GDMAC_CH_SRC_BURST_SIZE_32		0x4
#define GDMAC_CH_SRC_BURST_SIZE_64		0x5
#define GDMAC_CH_SRC_BURST_SIZE_128		0x6
#define GDMAC_CH_SRC_BURST_SIZE_256		0x7

#define GDMAC_CH_PRIORITY_MASK			0x4
#define GDMAC_CH_PRIORITY_0			0x0	/* lowest priority */
#define GDMAC_CH_PRIORITY_1			0x1
#define GDMAC_CH_PRIORITY_2			0x2
#define GDMAC_CH_PRIORITY_3			0x3	/* highest priority */

#define GDMAC_READ_INT_STATUS() \
	(GDMAC_INT_STATUS & 0xf)

#define GDMAC_READ_TC_INT_STATUS() \
	(GDMAC_TC_INT_STATUS & 0xf)

#define GDMAC_WRITE_TC_INT_STATUS_CLR(status) \
	(GDMAC_TC_INT_STATUS_CLR = (status) & 0xf)

#define GDMAC_READ_ERR_INT_STATUS() \
	(GDMAC_ERR_INT_STATUS & 0xf)

#define GDMAC_WRITE_ERR_INT_STATUS_CLR(status) \
	(GDMAC_ERR_INT_STATUS_CLR = (status) & 0xf)

#define GDMAC_READ_TC_STATUS() \
	(GDMAC_TC_STATUS & 0xf)

#define GDMAC_READ_ERR_STATUS() \
	(GDMAC_ERR_STATUS & 0xf)

#define GDMAC_READ_CH_ENABLE_STATUS() \
	(GDMAC_CH_ENABLE_STATUS & 0xf)

#define GDMAC_READ_CH_BUSY_STATUS() \
	(GDMAC_CH_BUSY_STATUS & 0xf)

#define GDMAC_READ_CSR() \
	(GDMAC_CSR & 0xf)

#define GDMAC_WRITE_CSR(status) \
	(GDMAC_CSR = (status) & 0xf)

#define GDMAC_READ_SYNC() \
	(GDMAC_SYNC & 0xf)

#define GDMAC_WRITE_SYNC(status) \
	(GDMAC_SYNC = (status) & 0xf)

#define GDMAC_CHANNEL_WITH_PENDING_INT(ch) \
	(GDMAC_READ_INT_STATUS() & (1 << GDMAC_CH##ch##_PENDING_INT_BIT))

#define GDMAC_CHANNEL_WITH_PENDING_TC_INT(ch) \
	(GDMAC_READ_TC_INT_STATUS() & (1 << GDMAC_CH##ch##_PENDING_TC_INT_BIT))

#define GDMAC_CHANNEL_CLEAR_TC_INT_STATUS(ch) \
	(GDMAC_WRITE_TC_INT_STATUS_CLR(1 << GDMAC_CH##ch##_CLEAR_TC_INT_BIT))

#define GDMAC_CHANNEL_WITH_PENDING_ERR_INT(ch) \
	(GDMAC_READ_ERR_INT_STATUS() & (1 << GDMAC_CH##ch##_PENDING_ERR_INT_BIT))

#define GDMAC_CHANNEL_CLEAR_ERR_INT_STATUS(ch) \
	(GDMAC_WRITE_ERR_INT_STATUS_CLR(1 << GDMAC_CH##ch##_CLEAR_ERR_INT_BIT))

#define GDMAC_CHANNEL_WITH_TC(ch) \
	(GDMAC_READ_TC_STATUS() & (1 << GDMAC_CH##ch##_TC_STATUS_BIT))

#define GDMAC_CHANNEL_WITH_ERR_STATUS(ch) \
	(GDMAC_READ_ERR_STATUS() & (1 << GDMAC_CH##ch##_ERR_STATUS_BIT))

#define GDMAC_CHANNEL_IS_ENABLE(ch) \
	(GDMAC_READ_CH_ENABLE_STATUS() & (1 << GDMAC_CH##ch##_ENABLE_STATUS_BIT))

#define GDMAC_CHANNEL_IS_BUSY(ch) \
	(GDMAC_READ_CH_BUSY_STATUS() & (1 << GDMAC_CH##ch##_BUSY_STATUS_BIT))

#define GDMAC_IS_ENABLE() \
	(GDMAC_READ_CSR() & (1 << GDMAC_ENABLE_BIT))

#define GDMAC_ENABLE() \
	(GDMAC_WRITE_CSR(GDMAC_READ_CSR() | (1 << GDMAC_ENABLE_BIT)))

#define GDMAC_DISABLE() \
	(GDMAC_WRITE_CSR(GDMAC_READ_CSR() & ~(1 << GDMAC_ENABLE_BIT)))

#define GDMAC_CONFIG_MASTER0_LITTLE_ENDIAN() \
	(GDMAC_WRITE_CSR(GDMAC_READ_CSR() & ~(1 << GDMAC_MASTER0_ENDIAN_BIT)))

#define GDMAC_CONFIG_MASTER1_LITTLE_ENDIAN() \
	(GDMAC_WRITE_CSR(GDMAC_READ_CSR() & ~(1 << GDMAC_MASTER1_ENDIAN_BIT)))

#define GDMAC_CONFIG_MASTER0_BIG_ENDIAN() \
	(GDMAC_WRITE_CSR(GDMAC_READ_CSR() | (1 << GDMAC_MASTER0_ENDIAN_BIT)))

#define GDMAC_CONFIG_MASTER1_BIG_ENDIAN() \
	(GDMAC_WRITE_CSR(GDMAC_READ_CSR() | (1 << GDMAC_MASTER1_ENDIAN_BIT)))

#define GDMAC_CHANNEL_SYNC_IS_ENABLE(ch) \
	(GDMAC_READ_SYNC() & (1 << GDMAC_CH##ch##_SYNC_ENABLE_BIT))

#define GDMAC_CHANNEL_ENABLE_SYNC(ch) \
	(GDMAC_WRITE_SYNC(GDMAC_READ_SYNC() | (1 << GDMAC_CH##ch##_SYNC_ENABLE_BIT)))

#define GDMAC_CHANNEL_DISABLE_SYNC(ch) \
	(GDMAC_WRITE_SYNC(GDMAC_READ_SYNC() & ~(1 << GDMAC_CH##ch##_SYNC_ENABLE_BIT)))

#define GDMAC_CHANNEL_READ_CSR(ch) \
	(GDMAC_CH##ch##_CSR & 0x00ffffff)

#define GDMAC_CHANNEL_WRITE_CSR(ch, status) \
	(GDMAC_CH##ch##_CSR = (status) & 0x00ffffff)

#define GDMAC_CHANNEL_ENABLE(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) | (1 << GDMAC_CH_ENABLE_BIT)))

#define GDMAC_CHANNEL_DISABLE(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) & ~(1 << GDMAC_CH_ENABLE_BIT)))

#define GDMAC_CHANNEL_DST_AHB_MASTER0(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) & ~(1 << GDMAC_CH_DST_SEL_BIT)))

#define GDMAC_CHANNEL_DST_AHB_MASTER1(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) | (1 << GDMAC_CH_DST_SEL_BIT)))

#define GDMAC_CHANNEL_SRC_AHB_MASTER0(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) & ~(1 << GDMAC_CH_SRC_SEL_BIT)))

#define GDMAC_CHANNEL_SRC_AHB_MASTER1(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) | (1 << GDMAC_CH_SRC_SEL_BIT)))

#define GDMAC_CHANNEL_DST_ADDR_INC(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_DST_ADDR_CTL_MASK << GDMAC_CH_DST_ADDR_CTL_BIT)) \
	| (GDMAC_CH_DST_ADDR_CTL_INC << GDMAC_CH_DST_ADDR_CTL_BIT)))

#define GDMAC_CHANNEL_DST_ADDR_DEC(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_DST_ADDR_CTL_MASK << GDMAC_CH_DST_ADDR_CTL_BIT)) \
	| (GDMAC_CH_DST_ADDR_CTL_DEC << GDMAC_CH_DST_ADDR_CTL_BIT)))

#define GDMAC_CHANNEL_DST_ADDR_FIXED(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_DST_ADDR_CTL_MASK << GDMAC_CH_DST_ADDR_CTL_BIT)) \
	| (GDMAC_CH_DST_ADDR_CTL_FIXED << GDMAC_CH_DST_ADDR_CTL_BIT)))

#define GDMAC_CHANNEL_SRC_ADDR_INC(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_ADDR_CTL_MASK << GDMAC_CH_SRC_ADDR_CTL_BIT)) \
	| (GDMAC_CH_SRC_ADDR_CTL_INC << GDMAC_CH_SRC_ADDR_CTL_BIT)))

#define GDMAC_CHANNEL_SRC_ADDR_DEC(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_ADDR_CTL_MASK << GDMAC_CH_SRC_ADDR_CTL_BIT)) \
	| (GDMAC_CH_SRC_ADDR_CTL_DEC << GDMAC_CH_SRC_ADDR_CTL_BIT)))

#define GDMAC_CHANNEL_SRC_ADDR_FIXED(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_ADDR_CTL_MASK << GDMAC_CH_SRC_ADDR_CTL_BIT)) \
	| (GDMAC_CH_SRC_ADDR_CTL_FIXED << GDMAC_CH_SRC_ADDR_CTL_BIT)))

#define GDMAC_CHANNEL_MODE_NORMAL(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) & ~(1 << GDMAC_CH_MODE_BIT)))

#define GDMAC_CHANNEL_MODE_HANDSHAKE(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) | (1 << GDMAC_CH_MODE_BIT)))

#define GDMAC_CHANNEL_DST_WIDTH_8BITS(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_DST_WIDTH_MASK << GDMAC_CH_DST_WIDTH_BIT)) \
	| (GDMAC_CH_DST_WIDTH_8BITS << GDMAC_CH_DST_WIDTH_BIT)))

#define GDMAC_CHANNEL_DST_WIDTH_16BITS(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_DST_WIDTH_MASK << GDMAC_CH_DST_WIDTH_BIT)) \
	| (GDMAC_CH_DST_WIDTH_16BITS << GDMAC_CH_DST_WIDTH_BIT)))

#define GDMAC_CHANNEL_DST_WIDTH_32BITS(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_DST_WIDTH_MASK << GDMAC_CH_DST_WIDTH_BIT)) \
	| (GDMAC_CH_DST_WIDTH_32BITS << GDMAC_CH_DST_WIDTH_BIT)))

#define GDMAC_CHANNEL_SRC_WIDTH_8BITS(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_WIDTH_MASK << GDMAC_CH_SRC_WIDTH_BIT)) \
	| (GDMAC_CH_SRC_WIDTH_8BITS << GDMAC_CH_SRC_WIDTH_BIT)))

#define GDMAC_CHANNEL_SRC_WIDTH_16BITS(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_WIDTH_MASK << GDMAC_CH_SRC_WIDTH_BIT)) \
	| (GDMAC_CH_SRC_WIDTH_16BITS << GDMAC_CH_SRC_WIDTH_BIT)))

#define GDMAC_CHANNEL_SRC_WIDTH_32BITS(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_WIDTH_MASK << GDMAC_CH_SRC_WIDTH_BIT)) \
	| (GDMAC_CH_SRC_WIDTH_32BITS << GDMAC_CH_SRC_WIDTH_BIT)))

#define GDMAC_CHANNEL_ABT(ch) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, GDMAC_CHANNEL_READ_CSR(ch) | (1 << GDMAC_CH_ABT_BIT)))

#define GDMAC_CHANNEL_CONFIG_SRC_BURST_SIZE(ch, size) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_SRC_BURST_SIZE_MASK << GDMAC_CH_BURST_SIZE_BIT)) \
	| (GDMAC_CH_SRC_BURST_SIZE_##size## << GDMAC_CH_SRC_BURST_SIZE_BIT)))

#if 0
#define GDMAC_CHANNEL_CONFIG_PROTECT_USER(ch)

#define GDMAC_CHANNEL_CONFIG_PROTECT_PRIV(ch)

#define GDMAC_CHANNEL_CONFIG_BUFFERABLE(ch)

#define GDMAC_CHANNEL_CONFIG_NONBUFFERABLE(ch)

#define GDMAC_CHANNEL_CONFIG_CACHEABLE(ch)

#define GDMAC_CHANNEL_CONFIG_NONCACHEABLE(ch)
#endif

#define GDMAC_CHANNEL_CONFIG_PRIORITY(ch, priority) \
	(GDMAC_CHANNEL_WRITE_CSR(ch, \
	(GDMAC_CHANNEL_READ_CSR(ch) & ~(GDMAC_CH_PRIORITY_MASK << GDMAC_CH_PRIORITY_BIT)) \
	| (GDMAC_CH_PRIORITY_##priority## << GDMAC_CH_PRIORITY_BIT)))

#define GDMAC_CHANNEL_READ_CFG(ch) \
	(GDMAC_CH##ch##_CFG & 0xff)

#define GDMAC_CHANNEL_WRITE_CFG(ch, status) \
	(GDMAC_CH##ch##_CFG = (status) & 0xf)
		
#define GDMAC_CHANNEL_TC_INT_IS_ENABLE(ch) \
	((GDMAC_CHANNEL_READ_CFG(ch) & (1 << GDMAC_CH_TC_INT_MASK_BIT)) == 0x0)

#define GDMAC_CHANNEL_ENABLE_TC_INT(ch) \
	(GDMAC_CHANNEL_WRITE_CFG(ch, (GDMAC_CHANNEL_READ_CFG(ch) & ~(1 << GDMAC_CH_TC_INT_MASK_BIT))))

#define GDMAC_CHANNEL_DISABLE_TC_INT(ch) \
	(GDMAC_CHANNEL_WRITE_CFG(ch, (GDMAC_CHANNEL_READ_CFG(ch) | (1 << GDMAC_CH_TC_INT_MASK_BIT))))

#define GDMAC_CHANNEL_ERR_INT_IS_ENABLE(ch) \
	((GDMAC_CHANNEL_READ_CFG(ch) & (1 << GDMAC_CH_ERR_INT_MASK_BIT)) == 0x0)

#define GDMAC_CHANNEL_ENABLE_ERR_INT(ch) \
	(GDMAC_CHANNEL_WRITE_CFG(ch, (GDMAC_CHANNEL_READ_CFG(ch) & ~(1 << GDMAC_CH_ERR_INT_MASK_BIT))))

#define GDMAC_CHANNEL_DISABLE_ERR_INT(ch) \
	(GDMAC_CHANNEL_WRITE_CFG(ch, (GDMAC_CHANNEL_READ_CFG(ch) | (1 << GDMAC_CH_ERR_INT_MASK_BIT))))

#define GDMAC_CHANNEL_ABT_INT_IS_ENABLE(ch) \
	((GDMAC_CHANNEL_READ_CFG(ch) & (1 << GDMAC_CH_ABT_INT_MASK_BIT)) == 0x0)

#define GDMAC_CHANNEL_ENABLE_ABT_INT(ch) \
	(GDMAC_CHANNEL_WRITE_CFG(ch, (GDMAC_CHANNEL_READ_CFG(ch) & ~(1 << GDMAC_CH_ABT_INT_MASK_BIT))))

#define GDMAC_CHANNEL_DISABLE_ABT_INT(ch) \
	(GDMAC_CHANNEL_WRITE_CFG(ch, (GDMAC_CHANNEL_READ_CFG(ch) | (1 << GDMAC_CH_ABT_INT_MASK_BIT))))

#define GDMAC_CHANNEL_BUSY(ch) \
	(GDMAC_CHANNEL_READ_CFG(ch) & (1 << GDMAC_CH_BUSY_BIT))

#define GDMAC_CHANNEL_READ_SRC_ADDR(ch) \
	(GDMAC_CH##ch##_SRC_ADDR)

#define GDMAC_CHANNEL_WRITE_SRC_ADDR(ch, addr) \
	(GDMAC_CH##ch##_SRC_ADDR = (addr))

#define GDMAC_CHANNEL_READ_DST_ADDR(ch) \
	(GDMAC_CH##ch##_DST_ADDR)

#define GDMAC_CHANNEL_WRITE_DST_ADDR(ch, addr) \
	(GDMAC_CH##ch##_DST_ADDR = (addr))

#define GDMAC_CHANNEL_READ_XFR_SIZE(ch) \
	(GDMAC_CH##ch##_XFR_SIZE & 0xfff)

#define GDMAC_CHANNEL_WRITE_XFR_SIZE(ch, size) \
	(GDMAC_CH##ch##_XFR_SIZE = (size) & 0xfff)

#endif

